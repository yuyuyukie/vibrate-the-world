{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Vibrator.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Vibrator","props","state","isVibrating","interval","e","this","window","navigator","vibrate","clearInterval","setState","console","log","setInterval","id","onClick","toggleVibrate","bind","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4BCuCCQ,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAa,EACbC,SAAU,MAJK,E,0DAOLC,GACRC,KAAKJ,MAAMC,aACbI,OAAOC,UAAUC,QAAQ,GACzBC,cAAcJ,KAAKJ,MAAME,UACzBE,KAAKK,UAAS,WACZ,MAAO,CACLR,aAAa,EACbC,SAAU,SAGdQ,QAAQC,IAAI,oBAEZP,KAAKK,UAAS,WACZ,MAAO,CACLR,aAAa,EACbC,SAAUU,YAAYP,OAAOC,UAAUC,QAAS,SAGpDG,QAAQC,IAAI,sB,+BAId,OACE,qBAAKE,GAAG,WAAR,SACE,wBACEA,GAAG,SACHZ,YAAaG,KAAKJ,MAAMC,YACxBa,QAASV,KAAKW,cAAcC,KAAKZ,MAHnC,SAKGA,KAAKJ,MAAMC,YAAc,OAAS,gB,GArCtBgB,IAAMC,WCK7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlC,M","file":"static/js/main.0b2339c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nclass Vibrator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVibrating: false,\r\n      interval: null,\r\n    };\r\n  }\r\n  toggleVibrate(e) {\r\n    if (this.state.isVibrating) {\r\n      window.navigator.vibrate(0);\r\n      clearInterval(this.state.interval);\r\n      this.setState(() => {\r\n        return {\r\n          isVibrating: false,\r\n          interval: null,\r\n        };\r\n      });\r\n      console.log(\"vibration stop\");\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isVibrating: true,\r\n          interval: setInterval(window.navigator.vibrate, 1000),\r\n        };\r\n      });\r\n      console.log(\"vibration start\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"Vibrator\">\r\n        <button\r\n          id=\"toggle\"\r\n          isVibrating={this.state.isVibrating}\r\n          onClick={this.toggleVibrate.bind(this)}\r\n        >\r\n          {this.state.isVibrating ? \"Stop\" : \"Start\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Vibrator;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Vibrator from \"./Vibrator\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Vibrator />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}